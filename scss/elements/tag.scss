@use "../configs/variables-scss" as vs;
@use "../configs/variables-derived" as vd;
@use "../configs/variables-init" as vi;
@use "../configs/extends";
@use "../configs/mixins" as mx;

$tag-h:                         vs.getVar("scheme-h");
$tag-s:                         vs.getVar("scheme-s");
$tag-background-l:              vs.getVar("background-l");
$tag-background-l-delta:        0%;

$tag-hover-background-l-delta:  vs.getVar("hover-background-l-delta");
$tag-active-background-l-delta: vs.getVar("active-background-l-delta");
$tag-color-l:                   vs.getVar("text-l");
$tag-radius:                    vs.getVar("radius") !default;
$tag-delete-margin:             1px !default;

$tag-colors:                    vd.$colors !default;

.#{vi.$prefix}tags {
  @extend %block;

  display:         flex;
  flex-wrap:       wrap;
  align-items:     center;
  justify-content: flex-start;
  gap:             0.5rem;
  color:           hsl(vs.getVar("tag-h"), vs.getVar("tag-s"), vs.getVar("tag-color-l"));

  // sizes
  &.#{vi.$prefix}are-medium {
    .#{vi.$prefix}tag:not(.#{vi.$prefix}is-normal):not(.#{vi.$prefix}is-large) {
      font-size: vs.getVar("size-normal");
    }
  }

  &.#{vi.$prefix}are-large {
    .#{vi.$prefix}tag:not(.#{vi.$prefix}is-normal):not(.#{vi.$prefix}is-medium) {
      font-size: vs.getVar("size-medium");
    }
  }

  &.#{vi.$prefix}is-centered {
    gap:             0.25rem;
    justify-content: center;
  }

  &.#{vi.$prefix}is-right {
    justify-content: flex-end;
  }
}
