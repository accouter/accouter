@use "sass:list";

@use "../configs/variables-derived" as vd;
@use "../configs/variables-init" as vi;
@use "../configs/variables-scss" as vs;
@use "../configs/mixins" as mx;
@use "../configs/functions" as fn;

@use "setup";

// The main lightness of the theme
$scheme-main-l: 90%;
$scheme-main:   vi.$scheme-h;

// The main scheme color, used to make calculations
$scheme-main:   hsl(vi.$scheme-h, vi.$scheme-s, $scheme-main-l);

@mixin light-theme {
  @include vs.register-vars((
    "scheme-h": vi.$scheme-h,
    "scheme-s": vi.$scheme-s,
    "light-l": vi.$light-l,
    "light-invert-l": vi.$dark-l,
    "dark-l": vi.$dark-l,
    "dark-invert-l": vi.$light-l,
    "soft-l": vi.$light-l,
    "soft-invert-l": vi.$dark-l,
    "bold-l": vi.$dark-l,
    "bold-invert-l": vi.$light-l,
    // Deltas
    "hover-background-l-delta": -5%,
    "active-background-l-delta": -10%,
    "hover-border-l-delta": 10%,
    "active-border-l-delta": 20%,
    "hover-color-l-delta": 5%,
    "active-color-l-delta": 10%,
    "hover-shadow-a-delta": 0.05,
    "active-shadow-a-delta": 0.1,
    // Light only
    "scheme-brightness": "light",
    "scheme-main-l": $scheme-main-l,
    "scheme-main-bis-l": 98%,
    "scheme-main-ter-l": 96%,
    "background-l": 96%,
    "scrollbar-l": 90%,
    "border-weak-l": 93%,
    "border-l": 86%,
    "text-weak-l": 48%,
    "text-l": 29%,
    "text-strong-l": 21%,
    "text-title-l": 14%,
    "scheme-invert-ter-l": 14%,
    "scheme-invert-bis-l": 7%,
    "scheme-invert-l": 4%,
    // Typography
    "family-primary": vd.$family-primary,
    "family-secondary": vd.$family-secondary,
    "family-code": vd.$family-code,
    "size-small": vd.$size-small,
    "size-normal": vd.$size-normal,
    "size-large": vd.$size-large,
    "weight-light": vi.$weight-light,
    "weight-normal": vi.$weight-normal,
    "weight-medium": vi.$weight-medium,
    "weight-semibold": vi.$weight-semibold,
    "weight-bold": vi.$weight-bold,
    "weight-extrabold": vi.$weight-extrabold,
    // Other
    "block-spacing": vi.$block-spacing,
    "duration": 300ms,
    "easing": vi.$easing,
    "radius-small": vi.$radius-small,
    "radius": vi.$radius,
    "radius-medium": vi.$radius-medium,
    "radius-large": vi.$radius-large,
    "radius-rounded": vi.$radius-rounded,
    "speed": vi.$speed,
    "arror-color": #{vs.getVar("link")},
    "loading-color": #{vs.getVar("border")},
    "burger-h": #{vs.getVar("link-h")},
    "burger-s": #{vs.getVar("link-s")},
    "burger-l": #{vs.getVar("link-l")},
    "burger-border-radius": 0.5em,
    "burger-gap": 5px,
    "burger-height": 2px,
    "burger-width": 24px,
  ));

  // Colors
  $no-palette: ("white", "black", "light", "dark");

  @each $name, $color in vd.$colors {
    $base:   $color;
    $invert: null;
    $light:  null;
    $dark:   null;

    @if type-of($color == "list") {
      $base: list.nth($color, 1);

      @if list.length($color) > 3 {
        $invert: list.nth($color, 2);
        $light:  list.nth($color, 3);
        $dark:   list.nth($color, 4);
      } @else if list.length($color) > 1 {
        $invert: list.nth($color, 2);
      }
    }

    @if list.index($no-palette, $name) {
      @include vs.generate-basic-palette($name, $base, $invert);
    } @else{
      @include vs.generate-color-palette($name, $base, $scheme-main-l, $invert, $light, $dark);
    }

    @include vs.generate-on-scheme-colors($name, $base, $scheme-main);

    // Shades
    @each $name, $shade in vd.$shades{
      @include vs.register-var($name, $shade);
    }

    @include vs.register-hsl("shadow", vd.$shadow-color);

    @each $size in vd.$sizes{
      $i: index(vd.$sizes, $size);
      $name: "size-#{$i}";
      @include vs.register-var($name, $size);
    }

    @include mx.scrollbar;
  }
}