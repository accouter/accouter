@use "../configs/variables-scss" as vs;
@use "../configs/variables-derived" as vd;
@use "../configs/variables-init" as vi;
@use "../configs/extends";
@use "../configs/mixins" as mx;

@mixin aside-nav {}

$sidebar-h:                  vs.getVar("scheme-h");
$sidebar-s:                  vs.getVar("scheme-s");
$sidebar-l:                  vs.getVar("scheme-main-l");
$sidebar-background-color:   vs.getVar("scheme-main-bis") !default;
$sidebar-box-shadow-size:    0 0 0.125em 0 !default;
$sidebar-box-shadow-color:   vs.getVar("gray-light") !default;
$sidebar-width:              vd.$sidebar-min-width !default;
$sidebar-padding-vertical:   0 !default;
$sidebar-padding-horizontal: 0 !default;
$sidebar-z-index:            40 !default;
$sidebar-fixed-z-index:      40 !default;
$sidebar-brand-font-size:    vs.getVar("size-4") !default;
$sidebar-brand-font-weight:  700 !default;
$sidebar-brand-color:        vs.getVar("white-bis") !default;
$sidebar-brand-gap:          vi.$gap !default;


:root {
  @include vs.register-vars((
    "sidebar-width": #{$sidebar-width}
  ));
}

aside {
  @include vs.register-vars((
    "sidebar-h": #{$sidebar-h},
    "sidebar-s": #{$sidebar-s},
    "sidebar-l": #{$sidebar-l},
    "sidebar-background-color": #{$sidebar-background-color},
    "sidebar-box-shadow-size": #{$sidebar-box-shadow-size},
    "sidebar-box-shadow-color": #{$sidebar-box-shadow-color},
    "sidebar-z-index": #{$sidebar-z-index},
    "sidebar-fixed-z-index": #{$sidebar-fixed-z-index},
    "sidebar-padding-vertical": #{$sidebar-padding-vertical},
    "sidebar-padding-horizontal": #{$sidebar-padding-horizontal},
    "sidebar-brand-font-weight": #{$sidebar-brand-font-weight},
    "sidebar-brand-font-size": #{$sidebar-brand-font-size},
    "sidebar-brand-color": #{$sidebar-brand-color},
    "sidebar-brand-gap": #{$sidebar-brand-gap}
  ));
}

aside {
  background-color: vs.getVar("sidebar-background-color");
  min-width:        vs.getVar("sidebar-width");
  position:         fixed;
  top:              0;
  left:             0;
  bottom:           0;
  z-index:          vs.getVar("sidebar-z-index");
  align-items:      flex-start;
  overflow-y:       scroll;
  padding:          vs.getVar("sidebar-padding-vertical") vs.getVar("sidebar-padding-horizontal");
  box-shadow:       vs.getVar("sidebar-box-shadow-size") vs.getVar("sidebar-box-shadow-color");


  @include mx.scrollbar;

  nav {
    display:        flex;
    flex-direction: column;

    .nav {}

    .expand {

    }

    .brand {
      display:         inline-flex;
      align-items:     center;
      font-weight:     vs.getVar("sidebar-brand-font-weight");
      font-size:       vs.getVar("sidebar-brand-font-size");
      color:           vs.getVar("sidebar-brand-color");
      margin:          0;
      line-height:     1;
      justify-content: center;
      white-space:     nowrap;
      gap:             vs.getVar("sidebar-brand-gap");

      img {
        height: 2rem;
        width:  auto;

        @include vs.system-theme($name: "dark") {
          @include mx.autodark-image;
        }
      }

      @media (min-width: vi.$tablet) {
        padding: .75rem 0;
      }
    }

    .brand-image {}

    .toggler {}

    .toggler-icon {}

    .transparent {}

    .nav {}

    .side {}

    .overlap {}
  }
}

[data-theme="dark"] {
  aside {
    nav {
      .brand {
        img {
          @include mx.autodark-image;
        }
      }
    }
  }
}